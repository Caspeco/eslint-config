name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  check:
    name: Build & Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [ 20.x ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name: Install
        run: yarn --immutable
      - name: Test
        run: yarn run test
  maybe-release:
    name: release
    runs-on: ubuntu-latest
    needs: [ check ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: google-github-actions/release-please-action@v3 # it will analyze commits and create PR with new version and updated CHANGELOG:md file. On merging it will create github release page with changelog
        id: release
        with:
          release-type: node
          package-name: release-please-action
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'

      - uses: actions/checkout@v3
        if: ${{ steps.release.outputs.release_created }}
      - name: Use Node.js
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: corepack enable
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v4
        if: ${{ steps.release.outputs.release_created }}
        with:
          node-version: 20
          cache: yarn
      - run: yarn --immutable
        if: ${{ steps.release.outputs.release_created }}

      - env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        if: ${{ steps.release.outputs.releases_created }}
        run: |
           echo npmAuthToken: "$NODE_AUTH_TOKEN" >> ./.yarnrc.yml
        
      - run: yarn npm publish --access public
        if: ${{ steps.release.outputs.releases_created }}
